import { RaviUtils } from "./RaviUtils";
export class RaviConsole {
    constructor() {
        RaviUtils.log("constructor", "RaviConsole");
        this._maxConsoleItems = 80;
    }
    setCommsConsole(commsConsoleListContainer) {
        var newRaviCommsConsoleList = document.createElement("ul");
        newRaviCommsConsoleList.style.fontFamily = '"Courier New", monospace';
        newRaviCommsConsoleList.id = "raviCommsConsoleList";
        let oldRaviCommsConsoleList = document.getElementById("raviCommsConsoleList");
        if (oldRaviCommsConsoleList &&
            oldRaviCommsConsoleList.children.length > 0 && oldRaviCommsConsoleList.parentNode) {
            for (let i = 0; i < oldRaviCommsConsoleList.children.length; i++) {
                newRaviCommsConsoleList.appendChild(oldRaviCommsConsoleList.children[i]);
            }
            let oldRaviCommsConsoleListParent = oldRaviCommsConsoleList.parentNode;
            if (oldRaviCommsConsoleListParent) {
                oldRaviCommsConsoleListParent.innerHTML = ``;
            }
        }
        commsConsoleListContainer.appendChild(newRaviCommsConsoleList);
        this.commsConsoleList = newRaviCommsConsoleList;
        document.addEventListener("logger", function (event) {
            var listItem = document.createElement("li");
            var message = document.createTextNode(`${Date.now()}: ${event.detail}`);
            listItem.classList.add("raviLog");
            listItem.appendChild(message);
            this.commsConsoleList.appendChild(listItem);
            this._pruneCommsConsole();
        }.bind(this));
        document.addEventListener("errlogger", function (event) {
            var listItem = document.createElement("li");
            var message = document.createTextNode(`${Date.now()}: ${event.detail}`);
            listItem.classList.add("raviError");
            listItem.appendChild(message);
            listItem.style.color = "red";
            this.commsConsoleList.appendChild(listItem);
            this._pruneCommsConsole();
        }.bind(this));
        RaviUtils.log("Comms console initialized.", "RaviConsole");
    }
    setMaxConsoleItems(maxConsoleItems) {
        this._maxConsoleItems = maxConsoleItems;
    }
    _pruneCommsConsole() {
        var maxNumLogs = this._maxConsoleItems;
        let commsConsoleChildren = this.commsConsoleList.children;
        if (!commsConsoleChildren || commsConsoleChildren.length - maxNumLogs < 0) {
            return;
        }
        for (let i = 0; i < commsConsoleChildren.length - maxNumLogs; i++) {
            commsConsoleChildren[i].parentNode.removeChild(commsConsoleChildren[i]);
        }
    }
}
//# sourceMappingURL=RaviConsole.js.map